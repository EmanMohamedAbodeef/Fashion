@model FashionIA.Models.User

@{
    ViewBag.Title = "Create";
        @Styles.Render("~/Content/All.css")

}


<h2>Registration</h2>

@using (Html.BeginForm("FileUpload", "Account", FormMethod.Post,
                    new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10 editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(m => m.Role, "Admin")admin|
                @Html.RadioButtonFor(m => m.Role, "Editor")editor|
                @Html.RadioButtonFor(m => m.Role, "User")User



            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <input type="file" name="file" id="file" style="width: 10%;" /> <br />
            @*<input type="submit" value="Upload" class="submit" />*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <input id="btnRefuse" class="btn" type="button" value="Or Login!" onclick="location.href='@Url.Action("Login")'" />

            </div>
        </div>
    </div>
}


